# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import transfer_pb2 as SRC__pro_dot_transfer__pb2


class TransferStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UploadPara = channel.unary_unary(
        '/transfer.Transfer/UploadPara',
        request_serializer=SRC__pro_dot_transfer__pb2.UploadRequest.SerializeToString,
        response_deserializer=SRC__pro_dot_transfer__pb2.UploadReply.FromString,
        )
    self.DownloadPara = channel.unary_unary(
        '/transfer.Transfer/DownloadPara',
        request_serializer=SRC__pro_dot_transfer__pb2.DownloadRequest.SerializeToString,
        response_deserializer=SRC__pro_dot_transfer__pb2.DownloadReply.FromString,
        )


class TransferServicer(object):
  """The greeting service definition.
  """

  def UploadPara(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DownloadPara(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransferServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UploadPara': grpc.unary_unary_rpc_method_handler(
          servicer.UploadPara,
          request_deserializer=SRC__pro_dot_transfer__pb2.UploadRequest.FromString,
          response_serializer=SRC__pro_dot_transfer__pb2.UploadReply.SerializeToString,
      ),
      'DownloadPara': grpc.unary_unary_rpc_method_handler(
          servicer.DownloadPara,
          request_deserializer=SRC__pro_dot_transfer__pb2.DownloadRequest.FromString,
          response_serializer=SRC__pro_dot_transfer__pb2.DownloadReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'transfer.Transfer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
